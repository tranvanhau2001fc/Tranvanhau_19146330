from google.colab import drive
drive.mount('/content/drive')
import glob
import cv2
import numpy as np
x_train = []
x_test = []
y_train = []
y_test = []
for Train in glob.glob("/content/drive/MyDrive/ANN/Train/*.bmp"):
  a = cv2.imread(Train)
  x_train.append(a)
  name0 = 'Hau'
  name1 = 'NguoiLa'
  if name0 in Train:
    y_train.append([0])
  elif name1 in Train:
    y_train.append([1])
x_train = np.array(x_train)
y_train = np.array(y_train)
for Test in glob.glob("/content/drive/MyDrive/ANN/Test/*.bmp"):
  b = cv2.imread(Test)
  x_test.append(b)
  name0 = 'Thang'
  name1 = 'NguoiLa'
  if name0 in Test:
    y_test.append([0])
  elif name1 in Test:
    y_test.append([1])
x_test = np.array(x_test)
y_test = np.array(y_test)
from keras.utils.np_utils import to_categorical

x_train = x_train.reshape(376, 67500)
x_test = x_test.reshape(251, 67500)
# Chuyen don vi mau thanh so thuc
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')

# Chuyen anh trang den
x_train /= 255
x_test /= 255

# ...to_categorical(y_train, 1) với 1: số phần tử output
y_train = to_categorical(y_train, 2)
y_test = to_categorical(y_test, 2)
from tensorflow.keras.optimizers import RMSprop
from keras.layers import Dense, Activation, BatchNormalization, Dropout
from keras.models import Sequential
model = Sequential()
model.add(Dense(512, kernel_initializer='normal', activation='relu', input_shape=(67500,)))
model.add(Dense(512, activation='relu'))
# model.add(Dropout(0.2))
# model.add(Dense(512, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(2, activation='softmax')) 
model.summary()
model.compile(loss='categorical_crossentropy', optimizer=RMSprop(), metrics=['accuracy'])
history = model.fit(x_train, y_train, batch_size=32, epochs=10, verbose=1)  
#verbose = 0: trong qua trinh hoc ko hien thi ra man hinh, = 1: hien thi ..., = 2: hien thi 1/500:..., 2/500:...
y_pred = model.predict(x_test)
print(y_pred)
score = model.evaluate(x_test, y_pred, verbose=0)
print('Test loss:', score[0])
print('Test accuracy:', score[1])
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from keras.models import load_model
img = load_img('Hau_0007.bmp', target_size=(150, 150))
plt.imshow(img)
img = img_to_array(img)
img = img.reshape(1, 67500)
img = img.astype('float32')
img = img / 255.0
# load model
#model_final = load_model('Hau.h5')
# predict the class
result = model.predict(img)
print('Giá trị dự đoán:', np.argmax(result))
if np.argmax(result) == 0:
   print("Chính là Hậu")
elif np.argmax(result) == 1:
  print("Không phải Hậu")
plt.show()
